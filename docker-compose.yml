version: '3.7'

x-kaori:
  &kaori
  build:
    context: .
    target: production
    cache_from: 
      - ${CACHE_FROM_IMAGE:-austinpray/kaori/kaori:master-latest}
      - austinpray/kaori/kaori
  image: austinpray/kaori/kaori
  env_file: .env
  environment:
    DATABASE_URL: postgresql://kaori:kaori@db:5432/kaori
  volumes:
    - .:/app

services:
  db:
    image: postgres
    ports:
      - "4444:5432"
    volumes:
      - "/var/lib/postgresql/data"
    environment:
      POSTGRES_DB: kaori
      POSTGRES_PASSWORD: kaori
      POSTGRES_USER: kaori

  rabbitmq:
    image: rabbitmq

  worker:
    <<: *kaori
    #command: ["dramatiq-gevent", "src.kaori.worker", "-p", "2", "-t", "8", "--watch", "./src"]
    command: ["dramatiq-gevent", "kaori.worker", "-p", "2", "-t", "8"]
    depends_on:
      - db
      - rabbitmq

  api:
    <<: *kaori
    command: ["gunicorn", "--config", "python:config.gunicorn_api", "kaori.api:app"]
    depends_on:
      - db
      - rabbitmq
    ports:
      - 8001:8001

  test: &test
    <<: *kaori
    image: austinpray/kaori/debug
    build:
      context: .
      target: development
      cache_from: 
        - ${CACHE_FROM_IMAGE:-austinpray/kaori/kaori}
        - austinpray/kaori/debug
    command: ["pytest"]

  gsim:
    <<: *test
    entrypoint: ["bin/gsim"]
    command: ["cards"]

  gweb:
    <<: *test
    working_dir: /app/kaori/plugins/gacha/static
    command: ["python", "-m", "http.server"]
    ports:
      - 8080:8000
